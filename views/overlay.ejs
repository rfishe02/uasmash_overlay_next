<html>

<head>
  <title>UA Smash Overlay</title>

  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">

  <link rel="stylesheet" href="/stylesheets/overlay.css">

  <style>
    body { background-color: rgba(0, 0, 0, 0);
      margin: 0px auto;
      overflow: hidden;
    }
  </style>

  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js" integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js" integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK" crossorigin="anonymous"></script>

  <script src="https://unpkg.com/vue@3"></script>

  <script src="/socket.io/socket.io.js"></script>

</head>

<body>
  <div id="app">

      <div class="container-fluid" style="width: 1920px; height: 1080px;">

        <gameplay-overlay v-if="type == 0"
        :p1name="p1Name"
        :p2name="p2Name"
        :p1score="p1Score"
        :p2score="p2Score"
        :eventround="eventRound"
        :bestof="bestOf"
        :bracketType="bracketType"
        :p1members="p1.members"
        :p2members="p2.members"
        > </gameplay-overlay>

        <div class="row justify-content-center fixed-bottom" v-if="type == 1">
          <div class="col-4 white-border mb-3">
            {{p1Name}}
          </div>
          <div class="col-1"></div>
          <div class="col-4 white-border mb-3">
            {{p2Name}}
          </div>
        </div>

      </div>

    </div>

  </div>
</body>

<script type="module">


  import GameplayOverlay from '/javascripts/GameplayOverlay.js'

  const { createApp} = Vue

  const socket = io("http://" + window.location.hostname + ":3000", {
    reconnectionDelayMax: 10000,
    autoConnect: false,
  })

  socket.on("overlay-push", ({ content, from }) => {
    try {

      overlayApp.p1 = content["teamOne"]
      overlayApp.p2 = content["teamTwo"]

      overlayApp.p1Name = overlayApp.p1 == null ? "" : overlayApp.p1.name
      overlayApp.p1Score = overlayApp.p1 == null ? "" : overlayApp.p1.score

      overlayApp.p2Name = overlayApp.p2 == null ? "" : overlayApp.p2.name
      overlayApp.p2Score = overlayApp.p2 == null ? "" : overlayApp.p2.score

      overlayApp.bracketType = content["bracketType"] == null ? "" : content["bracketType"].toUpperCase()
      overlayApp.eventRound = content["eventRound"] == null ? "" : content["eventRound"].toUpperCase()
      overlayApp.bestOf = content["bestOf"] == null ? "" : content["bestOf"].toUpperCase()

      sessionStorage.setItem("teamOne",JSON.stringify(content["teamOne"]))
      sessionStorage.setItem("teamTwo",JSON.stringify(content["teamTwo"]))

      sessionStorage.setItem("bracketType",overlayApp.bracketType)
      sessionStorage.setItem("eventRound",overlayApp.eventRound)
      sessionStorage.setItem("bestOf",overlayApp.bestOf)

    } catch(e) {
      console.log(e)
    }
  })

  socket.on("score-push", ({ content, from }) => {

    overlayApp.p1Score = content["p1Score"] == null ? "" : content["p1Score"]
    overlayApp.p2Score = content["p2Score"] == null ? "" : content["p2Score"]

    if(overlayApp.p1 != null) {
      overlayApp.p1.score = overlayApp.p1Score
      sessionStorage.setItem("teamOne",JSON.stringify(overlayApp.p1))
    }
    if(overlayApp.p2 != null) {
      overlayApp.p2.score = overlayApp.p2Score
      sessionStorage.setItem("teamTwo",JSON.stringify(overlayApp.p2))
    }

  })

  const overlayApp = createApp({
    data() {
      return {
        host: window.location.hostname,
        port: ":3000",
        p1: {},
        p2: {},
        p1Name: "",
        p2Name: "",
        p1Score: "",
        p2Score: "",
        bracketType: "",
        eventRound:"",
        bestOf:"",
        socket: socket,
        type: 0
      }
    },
    mounted() {
      const urlParams = new URLSearchParams(window.location.search)
      const room = urlParams.get('id')
      const type = urlParams.get('type')

      if(room != null) {
        this.socket.connect()
        this.socket.emit("subscribe",room)
      }
      if(type != null) {
        this.type = type
      }

      const teamOne = sessionStorage.getItem("teamOne")
      const teamTwo = sessionStorage.getItem("teamTwo")

      const bracketType = sessionStorage.getItem("bracketType")
      const eventRound = sessionStorage.getItem("eventRound")
      const bestOf = sessionStorage.getItem("bestOf")

      if(teamOne != null) {
        this.p1 = JSON.parse(teamOne)
        this.p1Name = this.p1.name
        this.p1Score = this.p1.score
      }
      if(teamTwo != null) {
        this.p2 = JSON.parse(teamTwo)
        this.p2Name = this.p2.name
        this.p2Score = this.p2.score
      }

      if(bracketType != null) {
        this.bracketType = bracketType
      }
      if(eventRound != null) {
        this.eventRound = eventRound
      }
      if(bestOf != null) {
        this.bestOf = bestOf
      }

    },
    methods : {

    },
    components: {
      GameplayOverlay,
    }
  }).mount('#app')

</script>

</html>
